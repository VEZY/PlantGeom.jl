var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PlantGeom","category":"page"},{"location":"#PlantGeom","page":"Home","title":"PlantGeom","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PlantGeom.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PlantGeom]","category":"page"},{"location":"#PlantGeom.Material","page":"Home","title":"PlantGeom.Material","text":"Data structure for a mesh material that is used to describe the light components of a Phong reflection type model. All data is stored as RGBÎ± for Red, Green, Blue and transparency.\n\n\n\n\n\n","category":"type"},{"location":"#PlantGeom.RefMesh","page":"Home","title":"PlantGeom.RefMesh","text":"RefMesh type. Stores all information about a reference Mesh\n\n\n\n\n\n","category":"type"},{"location":"#PlantGeom.RefMeshes","page":"Home","title":"PlantGeom.RefMeshes","text":"RefMeshes type. Stores all RefMesh.\n\n\n\n\n\n","category":"type"},{"location":"#MakieCore.plot!-Tuple{MakieCore.Combined{MeshViz.viz, <:Tuple{PlantGeom.RefMeshes}}}","page":"Home","title":"MakieCore.plot!","text":"using MultiScaleTreeGraph, PlantGeom, WGLMakie, Meshes\n\nfile = joinpath(dirname(dirname(pathof(MultiScaleTreeGraph))),\"test\",\"files\",\"simpleOPFshapes.opf\") opf = readopf(file) meshes = getref_meshes(opf)\n\nviz(meshes)\n\nWith one shared color:\n\nviz(meshes, color = :green)\n\nOne color per reference mesh:\n\nviz(meshes, color = Dict(0 => :burlywood4, 1 => :springgreen4, 2 => :burlywood4))\n\nOr just changing the color of some:\n\nviz(meshes, color = Dict(0 => :burlywood4, 2 => :burlywood4))\n\nOne color for each vertex of the refmesh 0:\n\nnvertices(meshes)[1] viz(meshes, color = Dict(0 => 1:nvertices(meshes)[0]))\n\n\n\n\n\n","category":"method"},{"location":"#Meshes.nelements-Tuple{PlantGeom.RefMeshes}","page":"Home","title":"Meshes.nelements","text":"nelements(meshes::RefMeshes)\n\nReturn the number of elements for each reference mesh as a dict of id => nelements\n\n\n\n\n\n","category":"method"},{"location":"#Meshes.nvertices-Tuple{PlantGeom.RefMeshes}","page":"Home","title":"Meshes.nvertices","text":"nvertices(meshes::RefMeshes)\n\nReturn the number of vertices for each reference mesh as a dict of id => nvertices\n\n\n\n\n\n","category":"method"},{"location":"#PlantGeom.align_ref_meshes-Tuple{PlantGeom.RefMeshes}","page":"Home","title":"PlantGeom.align_ref_meshes","text":"align_ref_meshes(meshes::RefMeshes)\n\nAlign all reference meshes along the X axis. Used for visualisation only.\n\n\n\n\n\n","category":"method"},{"location":"#PlantGeom.get_ref_meshes-Tuple{Any}","page":"Home","title":"PlantGeom.get_ref_meshes","text":"get_ref_meshes(mtg)\n\nGet all reference meshes from an mtg, usually from an OPF.\n\nExamples\n\nusing MultiScaleTreeGraph, PlantGeom\nfile = joinpath(dirname(dirname(pathof(MultiScaleTreeGraph))),\"test\",\"files\",\"simple_OPF_shapes.opf\")\nopf = read_opf(file)\nmeshes = get_ref_meshes(opf)\n\nusing MeshViz\nviz(meshes[0][\"mesh\"])\nviz(meshes)\nmeshes.meshes\n\n\n\n\n\n","category":"method"},{"location":"#PlantGeom.materialBDD_to_material-Tuple{Any}","page":"Home","title":"PlantGeom.materialBDD_to_material","text":"Parse a material in opf format to a material\n\n\n\n\n\n","category":"method"},{"location":"#PlantGeom.meshBDD_to_meshes-Tuple{Any}","page":"Home","title":"PlantGeom.meshBDD_to_meshes","text":"meshBDD_to_meshes(x)\n\nExamples\n\nusing MultiScaleTreeGraph\nfile = joinpath(dirname(dirname(pathof(MultiScaleTreeGraph))),\"test\",\"files\",\"simple_OPF_shapes.opf\")\nopf = read_opf(file)\nmeshBDD_to_meshes(opf.attributes[:meshBDD])\n\n\n\n\n\n","category":"method"},{"location":"#PlantGeom.ref_meshes_color-Tuple{PlantGeom.RefMeshes}","page":"Home","title":"PlantGeom.ref_meshes_color","text":"Get the reference meshes colors (only the diffuse part for now).\n\nExamples\n\nusing MultiScaleTreeGraph, PlantGeom\nfile = joinpath(dirname(dirname(pathof(MultiScaleTreeGraph))),\"test\",\"files\",\"simple_OPF_shapes.opf\")\nopf = read_opf(file)\nmeshes = get_ref_meshes(opf)\nPlantGeom.ref_meshes_color(meshes)\n\n\n\n\n\n","category":"method"}]
}
