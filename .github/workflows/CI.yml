name: CI
on:
  push:
    branches:
      - main
    tags: "*"
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.9"
          - "1" # automatically expands to the latest stable 1.x release of Julia
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - name: Download and set up GR manually for Windows Julia 1.9
        if: matrix.os == 'windows-latest' && matrix.version == '1.9'
        shell: powershell
        run: |
          $GR_ZIP_URL = "https://gr-framework.org/downloads/gr-latest-Windows-x86_64.tar.gz"
          $GR_INSTALL_PATH = "C:\GR_CI"
          $GR_ZIP_FILE = Join-Path $env:TEMP "gr.zip"

          Write-Host "Downloading GR from $GR_ZIP_URL..."
          Invoke-WebRequest -Uri $GR_ZIP_URL -OutFile $GR_ZIP_FILE

          Write-Host "Creating GR installation directory: $GR_INSTALL_PATH..."
          New-Item -ItemType Directory -Force -Path $GR_INSTALL_PATH

          Write-Host "Extracting $GR_ZIP_FILE to $GR_INSTALL_PATH..."
          Expand-Archive -Path $GR_ZIP_FILE -DestinationPath $GR_INSTALL_PATH -Force

          Write-Host "Setting GRDIR environment variable to $GR_INSTALL_PATH..."
          echo "GRDIR=$GR_INSTALL_PATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          Write-Host "GRDIR set. Contents of ${GR_INSTALL_PATH}:"
          Get-ChildItem -Path $GR_INSTALL_PATH
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      actions: write # needed to allow julia-actions/cache to proactively delete old caches that it has created
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: "1"
      - uses: julia-actions/cache@v2
      - name: Configure doc environment
        shell: julia --project=docs --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - name: Run doctests
        shell: julia --project=docs --color=yes {0}
        run: |
          using Documenter: DocMeta, doctest
          using PlantGeom
          DocMeta.setdocmeta!(PlantGeom, :DocTestSetup, :(using PlantGeom); recursive=true)
          doctest(PlantGeom)
